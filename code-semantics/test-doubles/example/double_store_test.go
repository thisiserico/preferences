// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/thisiserico/preferences/code-semantics/test-doubles/example (interfaces: Store)

// Package example is a generated GoMock package.
package example

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// StoreDouble is a mock of Store interface.
type StoreDouble struct {
	ctrl     *gomock.Controller
	recorder *StoreDoubleMockRecorder
}

// StoreDoubleMockRecorder is the mock recorder for StoreDouble.
type StoreDoubleMockRecorder struct {
	mock *StoreDouble
}

// NewStoreDouble creates a new mock instance.
func NewStoreDouble(ctrl *gomock.Controller) *StoreDouble {
	mock := &StoreDouble{ctrl: ctrl}
	mock.recorder = &StoreDoubleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *StoreDouble) EXPECT() *StoreDoubleMockRecorder {
	return m.recorder
}

// FetchSpaceWithID mocks base method.
func (m *StoreDouble) FetchSpaceWithID(arg0 string) *Space {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchSpaceWithID", arg0)
	ret0, _ := ret[0].(*Space)
	return ret0
}

// FetchSpaceWithID indicates an expected call of FetchSpaceWithID.
func (mr *StoreDoubleMockRecorder) FetchSpaceWithID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchSpaceWithID", reflect.TypeOf((*StoreDouble)(nil).FetchSpaceWithID), arg0)
}

// RemoveSpaceWithID mocks base method.
func (m *StoreDouble) RemoveSpaceWithID(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveSpaceWithID", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveSpaceWithID indicates an expected call of RemoveSpaceWithID.
func (mr *StoreDoubleMockRecorder) RemoveSpaceWithID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveSpaceWithID", reflect.TypeOf((*StoreDouble)(nil).RemoveSpaceWithID), arg0)
}
